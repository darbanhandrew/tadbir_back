# Generated by Django 3.2.6 on 2021-08-24 20:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('melli_code', models.CharField(max_length=100)),
                ('code', models.IntegerField(max_length=100)),
                ('phone_number', models.CharField(max_length=100)),
                ('age', models.IntegerField(default=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BimeGar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BimeGozar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BimeShavanadeGharardad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bimeshavande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BimeShavandeGharardadHazine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_saghf', models.BigIntegerField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bimeshavande_gharardad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.bimeshavanadegharardad')),
            ],
        ),
        migrations.CreateModel(
            name='Gharardad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='')),
                ('expire_date', models.DateField()),
                ('bimegar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.bimegar')),
                ('bimegozar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.bimegozar')),
            ],
        ),
        migrations.CreateModel(
            name='Hazine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paziresh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('hazine_darkhasti', models.BigIntegerField()),
                ('hazine_taeidi', models.BigIntegerField(default=0)),
                ('bime_paye', models.BooleanField(default=False)),
                ('shomare_nezam_pezeshki', models.CharField(blank=True, max_length=100, null=True)),
                ('markaz_darmani', models.CharField(blank=True, max_length=50, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(choices=[('waitforkarshenas', 'در انتظار تایید کارشناس'), ('waitforarzyab', 'در انتظار تایید ارزیاب'), ('accepted', 'تایید برای پرداخت'), ('rejected', 'عودت')], default='waitforkarshenas', max_length=20)),
                ('arzyab_message', models.TextField(blank=True, null=True)),
                ('arzyab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arzyab', to=settings.AUTH_USER_MODEL)),
                ('bimeshavande_gharardad_hazine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.bimeshavandegharardadhazine')),
                ('karshenas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='karshenas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'bimeshavande'), (2, 'bimegozar'), (3, 'karshenas'), (4, 'arzyab'), (5, 'admin')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PazireshFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paziresh', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.paziresh')),
            ],
        ),
        migrations.CreateModel(
            name='HazineGharardad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saghf', models.BigIntegerField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('gharardad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.gharardad')),
                ('hazine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.hazine')),
            ],
        ),
        migrations.CreateModel(
            name='HazineCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='basic.hazinecategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hazine',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.hazinecategory'),
        ),
        migrations.AddField(
            model_name='gharardad',
            name='gharardad_hazines',
            field=models.ManyToManyField(through='basic.HazineGharardad', to='basic.Hazine'),
        ),
        migrations.AddField(
            model_name='bimeshavandegharardadhazine',
            name='hazine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.hazine'),
        ),
        migrations.AddField(
            model_name='bimeshavanadegharardad',
            name='gharardad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.gharardad'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(to='basic.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
